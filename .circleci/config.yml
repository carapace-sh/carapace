version: 2.1

commands:
  run_tests:
    steps:
      - run:
          name: "build"
          command: |
            go get -t -v ./...
            go build
            go vet
            cd example
            go build .
            cd ..
            PATH=$PATH:$PWD/example go test -coverprofile=coverage.out -v ./...
            sed -i '/^github.com\/rsteube\/carapace\/third_party/d' coverage.out 
      - run:
          name: "shellcheck bash"
          command: shellcheck -e SC2046,SC2206,SC2207 <(./example/example _carapace bash)
      - run:
          name: "shellcheck fish"
          command: shellcheck -e SC1064,SC1072,SC1073 <(./example/example _carapace fish)
      - run:
          name: "PSScriptAnayzer powershell"
          command: |
            ./example/example _carapace powershell > /tmp/powershell.ps1
            pwsh -Command "Invoke-ScriptAnalyzer -Path /tmp/powershell.ps1" -EnableExit
      - run:
          name: "shellcheck zsh"
          command: shellcheck -e SC2148,SC2154 <(./example/example _carapace zsh)
  coveralls:
    steps:
      - run:
          name: "Install goveralls"
          command: go install github.com/mattn/goveralls@latest
      - run:
          name: "Send coverage"
          command: goveralls -coverprofile=coverage.out -service=circleci -repotoken ${COVERALLS_TOKEN}


jobs:
  current:
    docker:
      - image: ghcr.io/rsteube/carapace
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - run_tests
      - coveralls
      - run:
          name: "Check formatting"
          command: diff -u <(echo -n) <(gofmt -d -s .)
  latest:
    docker:
      - image: ghcr.io/rsteube/carapace
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - run:
          name: "Upgrade dependencies"
          command: "go get -u"
      - run_tests
      - run:
          name: "Check formatting"
          command: diff -u <(echo -n) <(gofmt -d -s .)
  pflag-fork:
    docker:
      - image: ghcr.io/rsteube/carapace
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - run:
          name: "replace pflag with fork"
          command: echo 'replace github.com/spf13/pflag => github.com/rsteube/carapace-pflag v0.0.3' >> go.mod
      - run_tests
  doc:
    docker:
      - image: ghcr.io/rsteube/carapace
    steps:
      - checkout
      - run:
          name: "build docs"
          command: |
            sed -i 's/\[output.linkcheck\]/#[output.linkcheck]/' docs/book.toml
            mdbook build docs
      - run:
          name: "push gh-pages"
          command: |
            cd docs/book/
            git init
            git config user.name rsteube
            git config user.email rsteube@users.noreply.github.com
            git add .
            git commit -m "Initial commit [ci skip]"
            git push --force https://rsteube:${GITHUB_TOKEN}@github.com/rsteube/carapace.git master:gh-pages
  image:
    working_directory: /app
    docker:
      - image: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build application Docker image"
          command: docker build . -t "ghcr.io/rsteube/carapace:${CIRCLE_TAG-latest}"
      - deploy:
          name: "Push application Docker image"
          command: |
              echo $GITHUB_TOKEN | docker login ghcr.io -u rsteube --password-stdin
              docker push "ghcr.io/rsteube/carapace:${CIRCLE_TAG-latest}"


  release:
    docker:
      - image: ghcr.io/rsteube/carapace
    steps:
      - checkout
      - run: cd example && goreleaser

workflows:
  version: 2
  main:
    jobs:
      - current
      - latest
      - pflag-fork
      - doc:
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
      - image:
          filters:
            branches:
              only: /master/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
  tags:
    jobs:
      - release:
          # Only run this job on git tag pushes
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
